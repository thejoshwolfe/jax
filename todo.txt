This is a roadmap/todo.

Version 1.0:

broken:
    detect ambiguous overload resolution
    "special handling for superclass, private, and instance initialization method invocations" ( http://java.sun.com/docs/books/jvms/second_edition/html/Instructions2.doc6.html#invokespecial )

semalysis:
    throw
    interface declaration

ast:
    array store
    loops with else's
    continue/break/return
    forbidding assignment to final fields
    extends and implements
    abstract classes/methods
    class literals (ex: String.class)
    array initializers (new int[] { 1, 2 })
    javaMode abridged array initializers (int[] a = { 1, 2 })
    do-while loops
    finally
    synchronized blocks

staticalysis:
    uninitialized variable access
    unreachable code
    checked exceptions

misc:
    hygienic macros


Version 1.1:

staticalysis:
    compile-time constant reduction (ex: a=1+1 => a=2)
    static final field (constant) inlining
misc:
    line + column lookup in all compile errors
    debug info
    referencing other .jax files (kind of important)



Version 2.0:

ast:
    local and anonymous types
    enums
    variadic functions
    for each loops

semalysis:
    closure-like final variable thing
    generic types
    automatic boxing/unboxing

